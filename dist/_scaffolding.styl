replicate(selector)
  {selector}
    {block}
  for key, value in breakpoints
    @media value.breakpoint
      {selector}--{key}
        {block}

media(bp)
  for key, value in breakpoints
    if key == bp
      @media value.breakpoint
        {block}

base-font-size ?= 16px
grid-columns ?= 12
container-width ?= 1024px

breakpoints ?= {
  large: {breakpoint: '(min-width: 481px)', gutter: 24px},
  desk: {breakpoint: '(min-width: 1024px)', gutter: 24px},
  lap: {breakpoint: '(min-width: 481px) and (max-width: 1023px)', gutter: 24px},
  portable: {breakpoint: '(max-width: 1023px)', gutter: 24px},
  palm: {breakpoint: '(max-width: 480px)', gutter: 24px}
}

html, body
  margin: 0
  padding: 0
  width: 100%
  height: 100%

*, *:before, *:after
  box-sizing: border-box

article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section
  display: block

.combo
  display: table
  width: 100%
  > .combo-first
    width: 0
    white-space: nowrap
    img
      max-width: none
  > .combo-last
    width: 100%

.combo-first, .combo-last
  display: table-cell
  vertical-align: top

for key, value in breakpoints
  @media value.breakpoint
    .combo-first
      padding-right: (value.gutter / 2)
    .combo-last
      padding-left: (value.gutter / 2)

+replicate('.combo--middle')
  > *
    vertical-align: middle

+replicate('.combo--bottom')
  > *
    vertical-align: bottom

.combo--wide
  for key, value in breakpoints
    @media value.breakpoint
      .combo-first
        padding-right: value.gutter
      .combo-last
        padding-left: value.gutter

.combo--narrow
  for key, value in breakpoints
    @media value.breakpoint
      .combo-first
        padding-right: (value.gutter / 4)
      .combo-last
        padding-left: (value.gutter / 4)

+replicate('.combo--full')
  .combo-first
    padding-right: 0
  .combo-last
    padding-left: 0

+replicate('.combo--rev')
  > .combo-first
    width: 100%
    white-space: normal
  > .combo-last
    width: 0
    white-space: nowrap
    img
      max-width: none

.container
  margin: 0 auto
  max-width: container-width 
  
.grid
  font-size: 0
  > *
    font-size: base-font-size
    display: inline-block
    vertical-align: top
  for key, value in breakpoints
    @media value.breakpoint
      margin-left: value.gutter * -1
      > *
        padding-left: value.gutter

for column in (1..grid-columns)
  for num in (1..column)
    .grid-{num}of{column}
      width: (num/column) * 100%

for key, value in breakpoints
  @media value.breakpoint
    for column in (1..grid-columns)
      for num in (1..column)
        .grid-{num}of{column}--{key}
          width: (num/column) * 100%

+replicate('.grid--middle')
  > *
    vertical-align: middle

+replicate('.grid--bottom')
  > *
    vertical-align: bottom

.grid--wide
  for key, value in breakpoints
    @media value.breakpoint
      margin-left: (value.gutter * 2) * -1
      > *
        padding-left: value.gutter * 2

.grid--narrow
  for key, value in breakpoints
    @media value.breakpoint
      margin-left: (value.gutter / 2) * -1
      > *
        padding-left: (value.gutter / 2)

+replicate('.grid--full')
  margin-left: 0
  > *
    padding-left: 0

+replicate('.grid--rev')
  direction rtl
  text-align left
  > *
    direction ltr
    text-align left

+replicate('.u-hide')
  display: none

.u-show
  display: none

for key, value in breakpoints
  .u-show--{key}
    display: none 

+replicate('.u-show')
  display: block

.stickyWrapper
  width: 100%
  height: 100%
  display: table

.stickyBody
  height: 100%
  display: table-row

.stickyFooter
  display: table-row
  height: 1px
